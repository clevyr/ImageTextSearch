

<style>
    .bm-container {
        display: none;
        align-items: center;
        justify-content: center;
        position: fixed;
        width: 100%;
        height: 100%;
        z-index: 2;
    }

    .bm-overlay {
        display: block;
        position: fixed;
        width: 100%;
        height: 100%;
        z-index: 3;
        background-color: rgba(0,0,0,0.5);
    }

    .bm-active {
        display: flex;
    }

    .blazor-modal {
        display: flex;
        flex-direction: column;
        width: 50rem;
        background-color: #fff;
        border-radius: 4px;
        border: 1px solid #fff;
        padding: 1.5rem;
        z-index: 4;
    }

    .bm-header {
        display: flex;
        align-items: flex-start;
        justify-content: space-between;
        padding: 0 0 2rem 0;
    }

    .bm-title {
        margin-bottom: 0;
    }

    .bm-close {
        padding: 1rem;
        margin: -1rem -1rem -1rem auto;
        background-color: transparent;
        border: 0;
        -webkit-appearance: none;
        cursor: pointer;
    }
</style>
<div class="blazored-modal-container blazored-modal-active">

    <div class="blazored-modal-overlay" @onclick="HandleBackgroundClick"></div>

    <div class="blazored-modal-wrapper">
        <div>
            <div class="blazored-modal-header">
                <h3 class="blazored-modal-title">@Title</h3>
                
                    <button type="button" class="blazored-modal-close">
                        <span>&times;</span>
                    </button>
             
            </div>
            <div class="blazored-modal-content">
                    @ChildContent
            </div>
        </div>
    </div>
</div>


@code 
{
  [Parameter]
  public bool IsVisible { get; set; } = true;
  protected string Title { get; set; }
  [Parameter]
  public RenderFragment ChildContent { get; set; }

 protected override void OnInitialized()
  {
      int i = 0;
      ++i;
  }

  protected override void OnParametersSet()
  {
    int i = 0;
      ++i;
  }
}
