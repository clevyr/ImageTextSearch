# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import image_tagger_pb2 as protos_dot_image__tagger__pb2


class ImageTaggerStub(object):
  """The greeting service definition.
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.TagImage = channel.unary_unary(
        '/ImageTagger.ImageTagger/TagImage',
        request_serializer=protos_dot_image__tagger__pb2.TagImageRequest.SerializeToString,
        response_deserializer=protos_dot_image__tagger__pb2.TagImageReply.FromString,
        )


class ImageTaggerServicer(object):
  """The greeting service definition.
  """

  def TagImage(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_ImageTaggerServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'TagImage': grpc.unary_unary_rpc_method_handler(
          servicer.TagImage,
          request_deserializer=protos_dot_image__tagger__pb2.TagImageRequest.FromString,
          response_serializer=protos_dot_image__tagger__pb2.TagImageReply.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ImageTagger.ImageTagger', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
